{"version":3,"sources":["components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Game","useState","Player1","setPlayer1","Player2","setPlayer2","Winner","setWinner","scorePlayer1","setScorePlayer1","scorePlayer2","setScorePlayer2","boardStates","setBoardStates","clickedBoxes","setClickedBoxes","easyMode","setEasyMode","mediumMode","setMediumMode","hardMode","setHardMode","addMarkOnBoard","value","console","log","AImove","emptyChoices","i","push","Math","floor","random","length","AImoveMedium","rows","a","b","c","j","useEffect","first","firstPlayer","AImoveHard","setTimeout","BoardState","checkWinner","className","onClick","type","defaultChecked","checked","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f89f2fb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./game.css\";\r\n\r\nfunction Game() {\r\n  const [Player1, setPlayer1] = useState(false);\r\n  const [Player2, setPlayer2] = useState(false);\r\n  const [Winner, setWinner] = useState(\"\");\r\n  const [scorePlayer1, setScorePlayer1] = useState(0);\r\n  const [scorePlayer2, setScorePlayer2] = useState(0);\r\n  const [boardStates, setBoardStates] = useState([]);\r\n  const [clickedBoxes, setClickedBoxes] = useState(0);\r\n  const [easyMode, setEasyMode] = useState(false);\r\n  const [mediumMode, setMediumMode] = useState(false);\r\n  const [hardMode, setHardMode] = useState(true);\r\n  function firstPlayer() {\r\n    var first = Math.floor(Math.random() * 2) + 1;\r\n    if (first === 1) {\r\n      setPlayer1(true);\r\n      setPlayer2(false);\r\n    }\r\n    if (first === 2) {\r\n      setPlayer1(false);\r\n      setPlayer2(true);\r\n    }\r\n  }\r\n  function addMarkOnBoard(value) {\r\n    if (Player1 === true && Winner !== \"Player2\") {\r\n      setBoardStates({ ...boardStates, [value]: \"X\" });\r\n      setPlayer1(false);\r\n      setPlayer2(true);\r\n    }\r\n    if (Player2 === true && Winner !== \"Player1\") {\r\n      setBoardStates({ ...boardStates, [value]: \"0\" });\r\n      setPlayer1(true);\r\n      setPlayer2(false);\r\n    }\r\n    setClickedBoxes(clickedBoxes + 1);\r\n    console.log(boardStates);\r\n  }\r\n\r\n  function AImove() {\r\n    if (Player2 === true && Winner !== \"Player1\") {\r\n      var emptyChoices = [];\r\n      for (var i = 0; i < 9; i++) {\r\n        if (!boardStates[i]) emptyChoices.push(i);\r\n      }\r\n      var move = Math.floor(Math.random() * emptyChoices.length);\r\n      addMarkOnBoard(emptyChoices[move]);\r\n    }\r\n  }\r\n\r\n  function AImoveMedium() {\r\n    console.log(boardStates[2]);\r\n    if (Player2 === true && Winner !== \"Player1\") {\r\n      var emptyChoices = [];\r\n      for (var i = 0; i < 9; i++) {\r\n        if (!boardStates[i]) emptyChoices.push(i);\r\n      }\r\n\r\n      const rows = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n\r\n      for (let i = 0; i < rows.length; i++) {\r\n        const [a, b, c] = rows[i];\r\n        console.log(\"intra1\");\r\n\r\n        if (boardStates[a] === \"0\" && boardStates[b] === \"0\") {\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === c) {\r\n              console.log(\"intra3win\");\r\n              return addMarkOnBoard(c);\r\n            }\r\n          }\r\n        }\r\n        if (boardStates[a] === \"0\" && boardStates[c] === \"0\") {\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === b) {\r\n              console.log(\"intra3win\");\r\n              return addMarkOnBoard(b);\r\n            }\r\n          }\r\n        }\r\n        if (boardStates[b] === \"0\" && boardStates[c] === \"0\") {\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === a) {\r\n              console.log(\"intra3win\");\r\n              return addMarkOnBoard(a);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (let i = 0; i < rows.length; i++) {\r\n        const [a, b, c] = rows[i];\r\n        console.log(\"intra1\");\r\n\r\n        if (boardStates[a] === \"X\" && boardStates[b] === \"X\") {\r\n          console.log(\"intra\");\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === c) {\r\n              console.log(\"intra3\");\r\n              return addMarkOnBoard(c);\r\n            }\r\n          }\r\n        }\r\n        if (boardStates[b] === \"X\" && boardStates[c] === \"X\") {\r\n          console.log(\"intra\");\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === a) {\r\n              console.log(\"intra3\");\r\n              return addMarkOnBoard(a);\r\n            }\r\n          }\r\n        }\r\n        if (boardStates[a] === \"X\" && boardStates[c] === \"X\") {\r\n          console.log(\"intra\");\r\n          for (let j = 0; j < emptyChoices.length; j++) {\r\n            if (emptyChoices[j] === b) {\r\n              console.log(\"intra3\");\r\n              return addMarkOnBoard(b);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      var move = Math.floor(Math.random() * emptyChoices.length);\r\n      return addMarkOnBoard(emptyChoices[move]);\r\n    }\r\n  }\r\n\r\n  function AImoveHard() {\r\n    if (Player2 === true && Winner !== \"Player1\") {\r\n      var emptyChoices = [];\r\n      for (var i = 0; i < 9; i++) {\r\n        if (!boardStates[i]) emptyChoices.push(i);\r\n      }\r\n\r\n      const rows = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n\r\n      if (!boardStates[4]) {\r\n        return addMarkOnBoard(4);\r\n      }\r\n      AImoveMedium();\r\n    }\r\n  }\r\n\r\n  function checkWinner(BoardState) {\r\n    const rows = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const [a, b, c] = rows[i];\r\n\r\n      // Check if the game board contains winning combination\r\n      if (\r\n        BoardState[a] &&\r\n        BoardState[a] === BoardState[b] &&\r\n        BoardState[a] === BoardState[c]\r\n      ) {\r\n        // Return the winner ('x' or 'o')\r\n        if (Player1 === true) {\r\n          setWinner(\"Player2\");\r\n          setClickedBoxes(0);\r\n          setScorePlayer2(scorePlayer2 + 1);\r\n        }\r\n        if (Player2 === true) {\r\n          setWinner(\"Player1\");\r\n          setClickedBoxes(0);\r\n          setScorePlayer1(scorePlayer1 + 1);\r\n        }\r\n\r\n        return setBoardStates([]);\r\n      }\r\n    }\r\n    if (clickedBoxes === 9) {\r\n      setTimeout(() => {\r\n        setClickedBoxes(0);\r\n        return setBoardStates([]);\r\n      }, 2000);\r\n    }\r\n    // Otherwise do nothing\r\n    return null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Player1 === false && Player2 === false) firstPlayer();\r\n    if (easyMode && Winner === \"\") AImove();\r\n    if (mediumMode && Winner === \"\") AImoveMedium();\r\n    if (hardMode && Winner === \"\") AImoveHard();\r\n    if (Winner !== \"\") {\r\n      setTimeout(() => {\r\n        setWinner(\"\");\r\n      }, 2000);\r\n    }\r\n\r\n    checkWinner(boardStates);\r\n  }, [boardStates, AImove, AImoveMedium]);\r\n  return (\r\n    <div className=\"game\">\r\n      <h3>Score</h3>\r\n      <h3>\r\n        <span> Player One {scorePlayer1}</span> - {scorePlayer2} Player Two\r\n      </h3>\r\n\r\n      {Winner && (\r\n        <div className=\"WinnerAnouncement\">{Winner + \" has won the game.\"}</div>\r\n      )}\r\n      {clickedBoxes >= 9 && (\r\n        <div className=\"WinnerAnouncement\">It's a tie !</div>\r\n      )}\r\n      <ul>\r\n        <h1>Player 1 : X</h1>\r\n        <h1>Player 2 : 0</h1>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[0]) addMarkOnBoard(0);\r\n          }}\r\n        >\r\n          {boardStates[0] ? (\r\n            <p className=\"taken\">{boardStates[0]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[1]) addMarkOnBoard(1);\r\n          }}\r\n        >\r\n          {boardStates[1] ? (\r\n            <p className=\"taken\">{boardStates[1]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[2]) addMarkOnBoard(2);\r\n          }}\r\n        >\r\n          {boardStates[2] ? (\r\n            <p className=\"taken\">{boardStates[2]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[3]) addMarkOnBoard(3);\r\n          }}\r\n        >\r\n          {boardStates[3] ? (\r\n            <p className=\"taken\">{boardStates[3]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[4]) addMarkOnBoard(4);\r\n          }}\r\n        >\r\n          {boardStates[4] ? (\r\n            <p className=\"taken\">{boardStates[4]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[5]) addMarkOnBoard(5);\r\n          }}\r\n        >\r\n          {boardStates[5] ? (\r\n            <p className=\"taken\">{boardStates[5]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[6]) addMarkOnBoard(6);\r\n          }}\r\n        >\r\n          {boardStates[6] ? (\r\n            <p className=\"taken\">{boardStates[6]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[7]) addMarkOnBoard(7);\r\n          }}\r\n        >\r\n          {boardStates[7] ? (\r\n            <p className=\"taken\">{boardStates[7]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[8]) addMarkOnBoard(8);\r\n          }}\r\n        >\r\n          {boardStates[8] ? (\r\n            <p className=\"taken\">{boardStates[8]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <div className=\"wrapperCheck\">\r\n          <div className=\"checkIn\">\r\n            <input\r\n              type=\"checkbox\"\r\n              defaultChecked={easyMode}\r\n              checked={easyMode}\r\n              onChange={() => {\r\n                setMediumMode(false);\r\n                setEasyMode(!easyMode);\r\n                setHardMode(false);\r\n              }}\r\n            />{\" \"}\r\n            <label> Easy AI</label>\r\n          </div>\r\n          <div className=\"checkIn\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={mediumMode}\r\n              defaultChecked={mediumMode}\r\n              onChange={() => {\r\n                setMediumMode(!mediumMode);\r\n                setEasyMode(false);\r\n                setHardMode(false);\r\n              }}\r\n            />{\" \"}\r\n            <label> Medium AI</label>\r\n          </div>\r\n          <div className=\"checkIn\">\r\n            <input\r\n              type=\"checkbox\"\r\n              defaultChecked={hardMode}\r\n              checked={hardMode}\r\n              onChange={() => {\r\n                setMediumMode(false);\r\n                setEasyMode(false);\r\n                setHardMode(!hardMode);\r\n              }}\r\n            />{\" \"}\r\n            <label> Hard AI</label>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n      <h2>{Player1 ? \"Player one Turn\" : <span>Player Two Turn</span>}</h2>\r\n      <button\r\n        onClick={() => {\r\n          setScorePlayer1(0);\r\n          setScorePlayer2(0);\r\n          setBoardStates([]);\r\n          setClickedBoxes(0);\r\n        }}\r\n      >\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import \"./App.css\";\nimport Game from \"./components/game.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}