{"version":3,"sources":["components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Game","useState","Player1","setPlayer1","Player2","setPlayer2","Winner","setWinner","scorePlayer1","setScorePlayer1","scorePlayer2","setScorePlayer2","boardStates","setBoardStates","clickedBoxes","setClickedBoxes","easyMode","setEasyMode","addMarkOnBoard","value","console","log","AImove","emptyChoices","i","push","Math","floor","random","length","useEffect","first","firstPlayer","setTimeout","BoardState","rows","a","b","c","checkWinner","className","onClick","type","defaultChecked","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c37eb970.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./game.css\";\r\n\r\nfunction Game() {\r\n  const [Player1, setPlayer1] = useState(false);\r\n  const [Player2, setPlayer2] = useState(false);\r\n  const [Winner, setWinner] = useState(\"\");\r\n  const [scorePlayer1, setScorePlayer1] = useState(0);\r\n  const [scorePlayer2, setScorePlayer2] = useState(0);\r\n  const [boardStates, setBoardStates] = useState([]);\r\n  const [clickedBoxes, setClickedBoxes] = useState(0);\r\n  const [easyMode, setEasyMode] = useState(true);\r\n\r\n  function firstPlayer() {\r\n    var first = Math.floor(Math.random() * 2) + 1;\r\n    if (first === 1) {\r\n      setPlayer1(true);\r\n      setPlayer2(false);\r\n    }\r\n    if (first === 2) {\r\n      setPlayer1(false);\r\n      setPlayer2(true);\r\n    }\r\n    console.log(first);\r\n  }\r\n  function addMarkOnBoard(value) {\r\n    if (Player1 === true && Winner !== \"Player2\") {\r\n      setBoardStates({ ...boardStates, [value]: \"X\" });\r\n      setPlayer1(false);\r\n      setPlayer2(true);\r\n    }\r\n    if (Player2 === true && Winner != \"Player1\") {\r\n      setBoardStates({ ...boardStates, [value]: \"0\" });\r\n      setPlayer1(true);\r\n      setPlayer2(false);\r\n    }\r\n    setClickedBoxes(clickedBoxes + 1);\r\n    console.log(boardStates);\r\n  }\r\n\r\n  function AImove() {\r\n    if (Player2 === true && Winner !== \"Player1\") {\r\n      var emptyChoices = [];\r\n      for (var i = 0; i < 9; i++) {\r\n        if (!boardStates[i]) emptyChoices.push(i);\r\n      }\r\n      var move = Math.floor(Math.random() * emptyChoices.length);\r\n      addMarkOnBoard(emptyChoices[move]);\r\n    }\r\n  }\r\n\r\n  function checkWinner(BoardState) {\r\n    const rows = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const [a, b, c] = rows[i];\r\n\r\n      // Check if the game board contains winning combination\r\n      if (\r\n        BoardState[a] &&\r\n        BoardState[a] === BoardState[b] &&\r\n        BoardState[a] === BoardState[c]\r\n      ) {\r\n        // Return the winner ('x' or 'o')\r\n        if (Player1 === true) {\r\n          setWinner(\"Player2\");\r\n          setClickedBoxes(0);\r\n          setScorePlayer2(scorePlayer2 + 1);\r\n        }\r\n        if (Player2 === true) {\r\n          setWinner(\"Player1\");\r\n          setClickedBoxes(0);\r\n          setScorePlayer1(scorePlayer1 + 1);\r\n        }\r\n\r\n        return setBoardStates([]);\r\n      }\r\n    }\r\n    if (clickedBoxes === 9) {\r\n      setTimeout(() => {\r\n        setClickedBoxes(0);\r\n        return setBoardStates([]);\r\n      }, 2000);\r\n    }\r\n    // Otherwise do nothing\r\n    return null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Player1 === false && Player2 === false) firstPlayer();\r\n    if (easyMode) AImove();\r\n    if (Winner !== \"\") {\r\n      setTimeout(() => {\r\n        setWinner(\"\");\r\n      }, 2000);\r\n    }\r\n\r\n    checkWinner(boardStates);\r\n\r\n    console.log(clickedBoxes);\r\n\r\n    console.log(boardStates);\r\n  }, [boardStates]);\r\n  return (\r\n    <div className=\"game\">\r\n      <h3>\r\n        <span> Player One {scorePlayer1}</span> - {scorePlayer2} Player Two\r\n      </h3>\r\n      <button onClick={AImove}>RandomMove</button>\r\n      <button\r\n        onClick={() => {\r\n          setScorePlayer1(0);\r\n          setScorePlayer2(0);\r\n          setBoardStates([]);\r\n          setClickedBoxes(0);\r\n        }}\r\n      >\r\n        Restart\r\n      </button>\r\n      <input\r\n        type=\"checkbox\"\r\n        defaultChecked={easyMode}\r\n        onChange={() => {\r\n          setEasyMode(!easyMode);\r\n        }}\r\n      />{\" \"}\r\n      <label> Easy AI</label>\r\n      {Winner && (\r\n        <div className=\"WinnerAnouncement\">{Winner + \" has won the game.\"}</div>\r\n      )}\r\n      {clickedBoxes >= 9 && (\r\n        <div className=\"WinnerAnouncement\">It's a tie !</div>\r\n      )}\r\n      <ul>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[0]) addMarkOnBoard(0);\r\n          }}\r\n        >\r\n          {boardStates[0] ? (\r\n            <p className=\"taken\">{boardStates[0]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[1]) addMarkOnBoard(1);\r\n          }}\r\n        >\r\n          {boardStates[1] ? (\r\n            <p className=\"taken\">{boardStates[1]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[2]) addMarkOnBoard(2);\r\n          }}\r\n        >\r\n          {boardStates[2] ? (\r\n            <p className=\"taken\">{boardStates[2]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[3]) addMarkOnBoard(3);\r\n          }}\r\n        >\r\n          {boardStates[3] ? (\r\n            <p className=\"taken\">{boardStates[3]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[4]) addMarkOnBoard(4);\r\n          }}\r\n        >\r\n          {boardStates[4] ? (\r\n            <p className=\"taken\">{boardStates[4]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[5]) addMarkOnBoard(5);\r\n          }}\r\n        >\r\n          {boardStates[5] ? (\r\n            <p className=\"taken\">{boardStates[5]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[6]) addMarkOnBoard(6);\r\n          }}\r\n        >\r\n          {boardStates[6] ? (\r\n            <p className=\"taken\">{boardStates[6]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[7]) addMarkOnBoard(7);\r\n          }}\r\n        >\r\n          {boardStates[7] ? (\r\n            <p className=\"taken\">{boardStates[7]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            if (!boardStates[8]) addMarkOnBoard(8);\r\n          }}\r\n        >\r\n          {boardStates[8] ? (\r\n            <p className=\"taken\">{boardStates[8]}</p>\r\n          ) : (\r\n            (Player1 && <p>X</p>) || (Player2 && <p>0</p>)\r\n          )}\r\n        </li>\r\n      </ul>\r\n      <h2>{Player1 ? \"Player one Turn\" : <span>Player Two Turn</span>}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import \"./App.css\";\nimport Game from \"./components/game.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}